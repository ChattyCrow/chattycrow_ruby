!http://chattycrow.com/crow3logo.png!

h1. ChattyCrow - Ruby (on Rails) library

!https://travis-ci.org/netbrick/chattycrow_ruby.svg!:https://travis-ci.org/netbrick/chattycrow_ruby !https://coveralls.io/repos/netbrick/chattycrow_ruby/badge.png(Coverage Status)!:https://coveralls.io/r/netbrick/chattycrow_ruby !http://inch-ci.org/github/netbrick/chattycrow_ruby.png?branch=master!:http://inch-ci.org/github/netbrick/chattycrow_ruby !https://codeclimate.com/github/netbrick/chattycrow_ruby/badges/gpa.svg!:https://codeclimate.com/github/netbrick/chattycrow_ruby

This library makes easier call ChattyCrow API (http://chattycrow.com/).

h2. Installation

<pre>
# Gemfile
gem 'chatty_crow'
bundle install

# Manually
gem install chatty_crow
</pre>

h2. Configuration

h3. Yaml configuration

<pre>
# config/chatty_crow.yml

global: &global_settings
  host: 'https://chatty_crow.com/api/v1/'
  token: 'asdfg12345'
  default_channel: 'asdfg12345'

development:
  <<: *global_settings

test:
  <<: *global_settings

production:
  <<: *global_settings
</pre>

h3. Pass block with settings (initializer in Rails?)

<pre>
# "config/initializers/chatty_crow.rb"

ChattyCrow.configure do |config|
  config.host            = 'https://chatty_crow.com/api/v1/'
  config.token           = 'asdfg12345'
  config.default_channel = 'asdfg12345'
end

</pre>

h2. Usage

h3. Email notification

h3. IOS Push notification

<pre>
# Send request
response = ChattyCrow.send_ios(alert: 'hello', channel: 'other_than_default', contacts: [ 'new_ios_id1', 'new_ios_id2' ])

# Response
response
</pre>

h3. Android Push notification

<pre>
# Send request
response = ChattyCrow.send_android(alert: 'hello', data: 'data2', channel: 'other_than_default', contacts: [ 'new_ios_id1', 'new_ios_id2' ])

# Response
response
</pre>

h3. Skype notification

h3. Jabber notification

h3. SMS notification (only Czech Republic yet)

h2. Working with contacts via API

It's actually very usable, you can automatically add or remove contacts in your application after user was registered.

h3. Contact list

<pre>
  contacts = ChattyCrow.get_contacts(channel: 'other_than_default')
  # contacts = [ 'contact1', 'contact2', 'contact3' ]
</pre>

h3. Add contact

<pre>
  response = ChattyCrow.add_contacts('new1', 'new2exists', 'new3failed', channel: 'other_than_default')
  # Response
  # response.success_count = 1
  # response.exists_count  = 1
  # response.failed_count  = 1
  # response.exists = [ 'new2exists' ]
  # response.failed = [ 'new3failed' ]
</pre>

h3. Remove contact

<pre>
  response = ChattyCrow.remove_contacts('new1', 'new2exists', 'new3failed', channel: 'other_than_default')
  # Response
  # response.success_count = 1
  # response.failed_count  = 1
  # response.failed = [ 'new2failed' ]
</pre>
